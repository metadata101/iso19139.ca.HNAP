<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>schemas</artifactId>
    <groupId>org.geonetwork-opensource.schemas</groupId>
    <version>3.12-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>schema-iso19139.ca.HNAP</artifactId>
  <name>Schema Plugin HNAP ISO19139/119</name>

  <description>
     GeoNetwork schema plugin for HNAP ISO19139/119 standard
  </description>

  <dependencies>
    <dependency>
      <groupId>org.geonetwork-opensource.schemas</groupId>
      <artifactId>schema-core</artifactId>
      <version>${project.parent.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
     <groupId>org.geonetwork-opensource</groupId>
     <artifactId>core</artifactId>
     <version>${project.parent.version}</version>
     <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.xmlunit</groupId>
      <artifactId>xmlunit-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.xmlunit</groupId>
      <artifactId>xmlunit-matchers</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.reload4j</groupId>
      <artifactId>reload4j</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.geonetwork-opensource</groupId>
      <artifactId>common</artifactId>
      <version>${project.parent.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- test scope -->
    <dependency>
      <groupId>org.geonetwork-opensource.schemas</groupId>
      <artifactId>schema-core</artifactId>
      <version>${project.parent.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <!-- packaged into jar -->
      <resource>
        <directory>src/main/config/codelist/local/thesauri/theme</directory>
        <targetPath>thesarus/theme</targetPath>
      </resource>
      <resource>
        <directory>src/main/config/codelist/local/thesauri/place</directory>
        <targetPath>thesarus/place</targetPath>
      </resource>
      <resource>
        <directory>src/main/config/conversion</directory>
        <targetPath>xsl/conversion</targetPath>
      </resource>
      <resource>
        <directory>src/main/config/translations</directory>
        <targetPath>META-INF/catalog/locales</targetPath>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <!-- packaged into zip -->
      <resource>
        <directory>src/main/plugin/iso19139.ca.HNAP</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources/org/fao/geonet</directory>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <includes>
            <include>ca/**</include>
            <include>META-INF/**</include>
            <include>thesarus/**</include>
            <include>xsl/**</include>
            <include>config-spring-geonetwork.xml</include>
            <include>rebel.xml</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>sample-data</id>
            <phase>compile</phase>
            <configuration>
<target>
   <mkdir dir="target/sample-data"/>
   <defaultexcludes add="**/.DS_Store"/>
   <zip destfile="target/sample-data/Dynamic Radar Coverage.mef"
     basedir="src/main/plugin/iso19139.ca.HNAP/sample-data/Dynamic Radar Coverage"/>
   <zip destfile="target/sample-data/Harbour Porpoise Presence.mef"
     basedir="src/main/plugin/iso19139.ca.HNAP/sample-data/Harbour Porpoise Presence"/>
   <zip destfile="target/sample-data/North American Radar.mef"
     basedir="src/main/plugin/iso19139.ca.HNAP/sample-data/North American Radar"/>
   <zip destfile="target/sample-data/Ocean Salmon Program.mef"
     basedir="src/main/plugin/iso19139.ca.HNAP/sample-data/Ocean Salmon Program"/>
   <zip destfile="target/sample-data/Potential Haul Out Sites.mef"
     basedir="src/main/plugin/iso19139.ca.HNAP/sample-data/Potential Haul Out Sites"
     includes="**"/>
</target>
            </configuration>
            <goals><goal>run</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>plugin-assembly</id>
            <phase>package</phase>
            <goals><goal>single</goal></goals>
            <inherited>false</inherited>
            <configuration>
             <appendAssemblyId>false</appendAssemblyId>
             <descriptors>
              <descriptor>src/assembly/schema-plugin.xml</descriptor>
             </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>run-static-analysis</id>
      <activation>
        <property>
          <name>!skipTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docs</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>sphinx</id>
                <phase>compile</phase>
                <configuration>
<target>
   <property name="sphinx_build_options"
             value="-N -W --keep-going -n -j auto"/>
   <property name="theme"
             value="sphinx_rtd_theme"/>
   <property name="doctrees"
             value="target/doctrees"/>
   <property name="srcdir"
             value="src/sphinx"/>

   <property name="en"
             value="target/html"/>

   <mkdir dir="${en}"/>
   <exec executable="sphinx-build" failonerror="true">
     <arg line="${sphinx_build_options}"/>
     <arg line="-b html"/>
     <arg line="-Dhtml_theme=${theme}"/>
     <arg line="-d"/>
     <arg path="${doctrees}"/>
     <arg path="${srcdir}"/>
     <arg path="${en}"/>
   </exec>

   <property name="fr"
             value="target/html/fr"/>
   <mkdir dir="${fr}"/>
   <exec executable="sphinx-build" failonerror="true">
     <arg line="${sphinx_build_options}"/>
     <arg line="-b html"/>
     <arg line="-Dhtml_theme=${theme}"/>
     <arg line="-Dlanguage=fr"/>
     <arg line="-d"/>
     <arg path="${doctrees}"/>
     <arg path="${srcdir}"/>
     <arg path="${fr}"/>
   </exec>
</target>
                </configuration>
                <goals><goal>run</goal></goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>docs-assembly</id>
                <phase>package</phase>
                <goals><goal>single</goal></goals>
                <inherited>false</inherited>
                <configuration>
                 <appendAssemblyId>true</appendAssemblyId>
                 <descriptors>
                  <descriptor>src/assembly/docs.xml</descriptor>
                 </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>publish</id>
                <phase>install</phase>
                <goals><goal>copy-resources</goal></goals>
                <configuration>
                  <outputDirectory>docs</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}/html</directory>
                    </resource>
                  </resources>
                  <addDefaultExcludes/>
                  <encoding>UTF-8</encoding>
                  <overwrite>true</overwrite>
                </configuration>
               </execution>
             </executions>
           </plugin>
           -->
        </plugins>
      </build>
    </profile>

    <profile>
      <id>translate</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>gettext</id>
                <phase>compile</phase>
                <configuration>
<target>
   <property name="srcdir"
             value="src/sphinx"/>
   <property name="gettext"
             value="target/gettext"/>
   <mkdir dir="${outputdir}"/>
   <exec executable="sphinx-build" failonerror="true">
     <arg line="-b gettext"/>
     <arg path="${srcdir}"/>
     <arg path="${gettext}"/>
   </exec>

   <exec executable="sphinx-intl" failonerror="true">
     <arg line="-c"/>
     <arg path="${srcdir}/conf.py"/>
     <arg line="update -p"/>
     <arg path="${gettext}"/>
     <arg line="-l fr"/>
   </exec>
</target>
                </configuration>
                <goals><goal>run</goal></goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
