<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"
                xmlns:gml="http://www.opengis.net/gml/3.2"
						xmlns:srv="http://www.isotc211.org/2005/srv"
						xmlns:gmx="http://www.isotc211.org/2005/gmx"
						xmlns:gco="http://www.isotc211.org/2005/gco"
						xmlns:gmd="http://www.isotc211.org/2005/gmd"
                        xmlns:xlink='http://www.w3.org/1999/xlink'
                        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                        xmlns:ns2="http://www.w3.org/2004/02/skos/core#"
                        xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
                        xmlns:skos="http://www.w3.org/2004/02/skos/core#"
                xmlns:exslt = "http://exslt.org/common"
                        exclude-result-prefixes="rdf ns2 rdfs skos exslt">

	<xsl:include href="../iso19139/convert/functions.xsl"/>

  <xsl:variable name="thesauriDir" select="/root/env/thesauriDir" />
  <xsl:variable name="ecCoreThesaurus" select="document(concat('file:///', replace(concat($thesauriDir, '/local/thesauri/theme/GC_Core_Subject.rdf'), '\\', '/')))" />

  <xsl:variable name="schemaTranslationsDir" select="/root/env/schemaTranslationsDir" />
  <xsl:variable name="codelistFile" select="document(concat('file:///', replace(concat($schemaTranslationsDir, '/codelists.xml'), '\\', '/')))"/>

  <xsl:variable name="lang" select="/root/env/lang" />


  <xsl:variable name="localeForTranslations">
    <xsl:choose>
      <xsl:when test="normalize-space(/root/gmd:MD_Metadata/gmd:language/gco:CharacterString) = 'eng; CAN'">#fra</xsl:when>
      <xsl:otherwise>#eng</xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <!-- ================================================================= -->

	<xsl:template match="/root">
		<xsl:apply-templates select="gmd:MD_Metadata"/>
	</xsl:template>

	<!-- ================================================================= -->

	<xsl:template match="gmd:MD_Metadata">
		<xsl:copy>
			<xsl:apply-templates select="@*"/>

			<gmd:fileIdentifier>
				<gco:CharacterString>
					<xsl:value-of select="/root/env/uuid"/>
				</gco:CharacterString>
			</gmd:fileIdentifier>

			<xsl:apply-templates select="gmd:language"/>

			<!-- fixed to uft8 -->
			<gmd:characterSet>
				<gmd:MD_CharacterSetCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_95" codeListValue="RI_458">utf8; utf8</gmd:MD_CharacterSetCode>
			</gmd:characterSet>

			<xsl:choose>
				<xsl:when test="/root/env/parentUuid!=''">
					<gmd:parentIdentifier>
						<gco:CharacterString>
							<xsl:value-of select="/root/env/parentUuid"/>
						</gco:CharacterString>
					</gmd:parentIdentifier>
				</xsl:when>
				<xsl:when test="gmd:parentIdentifier">
					<xsl:copy-of select="gmd:parentIdentifier"/>
				</xsl:when>
			</xsl:choose>
			<xsl:apply-templates select="node()[name()!='gmd:language' and name()!='gmd:characterSet']"/>
		</xsl:copy>
	</xsl:template>


	<!-- ================================================================= -->
	<!-- Do not process MD_Metadata header generated by previous template  -->

	<xsl:template match="gmd:MD_Metadata/gmd:fileIdentifier|gmd:MD_Metadata/gmd:parentIdentifier" priority="10"/>

	<!-- ================================================================= -->

	<xsl:template match="gmd:dateStamp">
    <xsl:choose>
        <xsl:when test="/root/env/changeDate">
            <xsl:copy>
                    <gco:DateTime>
                        <xsl:value-of select="/root/env/changeDate"/>
                    </gco:DateTime>
            </xsl:copy>
        </xsl:when>
        <xsl:otherwise>
            <xsl:copy-of select="."/>
        </xsl:otherwise>
    </xsl:choose>
	</xsl:template>

	<!-- ================================================================= -->

	<!-- Only set metadataStandardName and metadataStandardVersion
	if not set. -->
	<xsl:template match="gmd:metadataStandardName[@gco:nilReason='missing' or gco:CharacterString='']" priority="10">
		<xsl:copy>
      <xsl:attribute name="xsi:type">gmd:PT_FreeText_PropertyType</xsl:attribute>
        <gco:CharacterString>North American Profile of ISO 19115:2003 - Geographic information - Metadata</gco:CharacterString>
        <gmd:PT_FreeText>
          <gmd:textGroup>
            <gmd:LocalisedCharacterString locale="#fra">Profil nord-américain de la norme ISO 19115:2003 - Information géographique - Métadonnées</gmd:LocalisedCharacterString>
          </gmd:textGroup>
        </gmd:PT_FreeText>
		</xsl:copy>
	</xsl:template>

	<xsl:template match="gmd:metadataStandardVersion[@gco:nilReason='missing' or gco:CharacterString='']" priority="10">
		<xsl:copy>
			<gco:CharacterString>CAN/CGSB-171.100-2009</gco:CharacterString>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->

	<xsl:template match="@gml:id">
		<xsl:choose>
			<xsl:when test="normalize-space(.)=''">
				<xsl:attribute name="gml:id">
					<xsl:value-of select="generate-id(.)"/>
				</xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy-of select="."/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<!-- ==================================================================== -->
	<!-- Fix srsName attribute generate CRS:84 (EPSG:4326 with long/lat
	     ordering) by default -->

	<xsl:template match="@srsName">
		<xsl:choose>
			<xsl:when test="normalize-space(.)=''">
				<xsl:attribute name="srsName">
					<xsl:text>CRS:84</xsl:text>
				</xsl:attribute>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy-of select="."/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

  <!-- Add required gml attributes if missing -->
  <xsl:template match="gml:Polygon[not(@gml:id) and not(@srsName)]">
    <xsl:copy>
      <xsl:attribute name="gml:id">
        <xsl:value-of select="generate-id(.)"/>
      </xsl:attribute>
      <xsl:attribute name="srsName">
        <xsl:text>http://www.opengis.net/def/crs/EPSG/0/4326</xsl:text>
      </xsl:attribute>
      <xsl:copy-of select="@*"/>
      <xsl:copy-of select="*"/>
    </xsl:copy>
  </xsl:template>

	<!-- ================================================================= -->

  <xsl:template match="*[gco:CharacterString]">
    <xsl:copy>
      <xsl:apply-templates select="@*[not(name()='gco:nilReason')]"/>
      <xsl:choose>
        <xsl:when test="normalize-space(gco:CharacterString)=''">
          <xsl:attribute name="gco:nilReason">
            <xsl:choose>
              <xsl:when test="@gco:nilReason"><xsl:value-of select="@gco:nilReason"/></xsl:when>
              <xsl:otherwise>missing</xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
        </xsl:when>
        <xsl:when test="@gco:nilReason!='missing' and normalize-space(gco:CharacterString)!=''">
          <xsl:copy-of select="@gco:nilReason"/>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="node()"/>
    </xsl:copy>
  </xsl:template>

  <!-- ================================================================= -->

  <xsl:template
    match="gmd:topicCategory[not(gmd:MD_TopicCategoryCode)]"
    priority="10" />


  <xsl:template match="gmd:topicCategory">
    <xsl:copy>
      <xsl:apply-templates select="@*[not(name()='gco:nilReason')]"/>
      <xsl:choose>
        <xsl:when test="normalize-space(gmd:MD_TopicCategoryCode)=''">
          <xsl:attribute name="gco:nilReason">
            <xsl:choose>
              <xsl:when test="@gco:nilReason"><xsl:value-of select="@gco:nilReason"/></xsl:when>
              <xsl:otherwise>missing</xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
        </xsl:when>
        <xsl:when test="@gco:nilReason!='missing' and normalize-space(gmd:MD_TopicCategoryCode)!=''">
          <xsl:copy-of select="@gco:nilReason"/>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="node()"/>
    </xsl:copy>
  </xsl:template>

	<!-- ================================================================= -->
	<!-- codelists: set @codeList path -->
	<!-- ================================================================= -->
	<xsl:template match="gmd:LanguageCode[@codeListValue]" priority="10">
		<gmd:LanguageCode codeList="http://www.loc.gov/standards/iso639-2/">
			<xsl:apply-templates select="@*[name(.)!='codeList']"/>
		</gmd:LanguageCode>
	</xsl:template>


	<!--<xsl:template match="gmd:*[@codeListValue]">
		<xsl:copy>
			<xsl:apply-templates select="@*"/>
			<xsl:attribute name="codeList">
			  <xsl:value-of select="concat('http://standards.iso.org/ittf/PubliclyAvailableStandards/ISO_19139_Schemas/resources/Codelist/ML_gmxCodelists.xml#',local-name(.))"/>
			</xsl:attribute>
		</xsl:copy>
	</xsl:template>-->

	<!-- can't find the location of the 19119 codelists - so we make one up -->

  <!--<xsl:template match="srv:*[@codeListValue]">
    <xsl:copy>
      <xsl:apply-templates select="@*"/>
      <xsl:attribute name="codeList">
        <xsl:value-of select="concat('http://www.isotc211.org/2005/iso19119/resources/Codelist/gmxCodelists.xml#',local-name(.))"/>
      </xsl:attribute>
    </xsl:copy>
  </xsl:template>-->


	<!-- ================================================================= -->

  <xsl:template match="gmx:FileName[contains(../../@id,'geonetwork.thesaurus.')]" priority="200">
		<xsl:copy>
    	<xsl:apply-templates select="node()|@*"/>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->

  <xsl:template match="gmx:FileName[name(..)!='gmd:contactInstructions']">
    <xsl:copy>
			<xsl:attribute name="src">
				<xsl:choose>
					<xsl:when test="/root/env/config/downloadservice/simple='true'">
						<xsl:value-of select="concat(/root/env/siteURL,'/resources.get?id=',/root/env/id,'&amp;fname=',.,'&amp;access=private')"/>
					</xsl:when>
					<xsl:when test="/root/env/config/downloadservice/withdisclaimer='true'">
						<xsl:value-of select="concat(/root/env/siteURL,'/file.disclaimer?id=',/root/env/id,'&amp;fname=',.,'&amp;access=private')"/>
					</xsl:when>
					<xsl:otherwise> <!-- /root/env/config/downloadservice/leave='true' -->
						<xsl:value-of select="@src"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:attribute>
			<xsl:value-of select="."/>
		</xsl:copy>
	</xsl:template>

	<!-- ================================================================= -->

	<!-- Do not allow to expand operatesOn sub-elements
		and constrain users to use uuidref attribute to link
		service metadata to datasets. This will avoid to have
		error on XSD validation. -->
	<xsl:template match="srv:operatesOn|gmd:featureCatalogueCitation">
		<xsl:copy>
			<xsl:copy-of select="@*"/>
		</xsl:copy>
	</xsl:template>


	<!-- ================================================================= -->
	<!-- Set local identifier to the first 2 letters of iso code. Locale ids
		are used for multilingual charcterString using #iso2code for referencing.
	-->
	<xsl:template match="gmd:PT_Locale">

		<xsl:variable name="id" select="substring(gmd:languageCode/gmd:LanguageCode/@codeListValue, 1, 3)"/>
		<xsl:choose>
			<xsl:when test="@id and (normalize-space(@id)!='' and normalize-space(@id)=$id)">
				<xsl:copy>
          <xsl:copy-of select="@*" />

          <gmd:languageCode>
            <gmd:LanguageCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_116">
              <xsl:attribute name="codeListValue">
                <xsl:value-of select="$id"/>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="normalize-space($id) = 'fra'">French; Français</xsl:when>
                <xsl:otherwise>English; Anglais</xsl:otherwise>
              </xsl:choose>
            </gmd:LanguageCode>
          </gmd:languageCode>
          <xsl:apply-templates select="gmd:country" />
          <xsl:apply-templates select="gmd:characterEncoding" />
        </xsl:copy>
			</xsl:when>
			<xsl:otherwise>
				<gmd:PT_Locale>
					<xsl:attribute name="id">
						<xsl:value-of select="$id"/>
					</xsl:attribute>

          <gmd:languageCode>
            <gmd:LanguageCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_116">
              <xsl:attribute name="codeListValue">
                <xsl:value-of select="$id"/>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="normalize-space($id) = 'fra'">French; Français</xsl:when>
                <xsl:otherwise>English; Anglais</xsl:otherwise>
              </xsl:choose>
            </gmd:LanguageCode>
          </gmd:languageCode>
          <xsl:apply-templates select="gmd:country" />
          <xsl:apply-templates select="gmd:characterEncoding" />
				</gmd:PT_Locale>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<!-- Replace gmx:Anchor element by a simple gco:CharacterString.
		gmx:Anchor is usually used for linking element using xlink.
		TODO : Currently gmx:Anchor is not supported
	-->
	<xsl:template match="gmx:Anchor">
		<gco:CharacterString>
			<xsl:value-of select="."/>
		</gco:CharacterString>
	</xsl:template>

  <xsl:template match="gmd:thesaurusName/gmd:CI_Citation[gmd:title/gco:CharacterString='Geography' or
                                        gmd:title/gco:CharacterString='Geography Portée Géographique']">


    <xsl:copy>
      <xsl:copy-of select="@*" />

      <xsl:apply-templates select="gmd:title" />
      <xsl:apply-templates select="gmd:alternateTitle" />
      <xsl:apply-templates select="gmd:date" />
      <xsl:apply-templates select="gmd:edition" />
      <xsl:apply-templates select="gmd:editionDate" />
      <xsl:apply-templates select="gmd:identifier" />
      <xsl:apply-templates select="gmd:citedResponsibleParty" />

      <xsl:if test="not(gmd:citedResponsibleParty)">
        <gmd:citedResponsibleParty>
          <gmd:CI_ResponsibleParty>
            <gmd:organisationName xsi:type="gmd:PT_FreeText_PropertyType">
              <gco:CharacterString>
                <xsl:choose>
                  <xsl:when test="$localeForTranslations = '#fra'">Gouvernement du Canada; Bibliothèque et Archives Canada</xsl:when>
                  <xsl:otherwise>Government of Canada; Library and Archives Canada</xsl:otherwise>
                </xsl:choose>
              </gco:CharacterString>
              <gmd:PT_FreeText>
                <gmd:textGroup>
                  <gmd:LocalisedCharacterString locale="{$localeForTranslations}">
                    <xsl:choose>
                      <xsl:when test="$localeForTranslations = '#fra'">Gouvernement du Canada; Bibliothèque et Archives Canada</xsl:when>
                      <xsl:otherwise>Government of Canada; Library and Archives Canada</xsl:otherwise>
                    </xsl:choose>
                  </gmd:LocalisedCharacterString>
                </gmd:textGroup>
              </gmd:PT_FreeText>
            </gmd:organisationName>
            <gmd:role>
              <gmd:CI_RoleCode codeListValue="RI_409" codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_90">custodian; conservateur</gmd:CI_RoleCode>
            </gmd:role>
          </gmd:CI_ResponsibleParty>
        </gmd:citedResponsibleParty>
      </xsl:if>

      <xsl:apply-templates select="gmd:presentationForm" />
      <xsl:apply-templates select="gmd:series" />
      <xsl:apply-templates select="gmd:otherCitationDetails" />
      <xsl:apply-templates select="gmd:collectiveTitle" />
      <xsl:apply-templates select="gmd:ISBN" />
      <xsl:apply-templates select="gmd:ISSN" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="gmd:MD_Keywords[gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString='Government of Canada Core Subject Thesaurus' or
                                        gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString='Thésaurus des sujets de base du gouvernement du Canada']">
        <xsl:variable name="l1">
            <xsl:choose>
                <xsl:when test="normalize-space(//gmd:MD_Metadata/gmd:language/gco:CharacterString) = 'eng; CAN'">en</xsl:when>
                <xsl:otherwise>fr</xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="l2">
            <xsl:choose>
                <xsl:when test="$l1 = 'en'">fr</xsl:when>
                <xsl:otherwise>en</xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

        <xsl:variable name="langCode">
            <xsl:choose>
                <xsl:when test="$l1 = 'en'">#fra</xsl:when>
                <xsl:otherwise>#eng</xsl:otherwise>
            </xsl:choose>
        </xsl:variable>

      <xsl:choose>
          <xsl:when test="starts-with($lang, $l1)">
              <xsl:copy>

                <xsl:if test="not(gmd:keyword)">
                  <gmd:keyword xsi:type="gmd:PT_FreeText_PropertyType">
                    <gco:CharacterString></gco:CharacterString>
                    <gmd:PT_FreeText>
                      <gmd:textGroup>
                        <gmd:LocalisedCharacterString locale="{$langCode}"></gmd:LocalisedCharacterString>
                      </gmd:textGroup>
                    </gmd:PT_FreeText>
                  </gmd:keyword>
                </xsl:if>

                <xsl:for-each select="gmd:keyword">
                  <xsl:variable name="value" select="normalize-space(gco:CharacterString)" />
                  <xsl:variable name="valueTrans" select="normalize-space(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString)" />

                  <xsl:variable name="sameValue" select="count($ecCoreThesaurus//skos:concept[(skos:prefLabel[not(@xml:lang)] = $value and skos:prefLabel[@xml:lang='fr']  = $valueTrans) or
                    (skos:prefLabel[not(@xml:lang)] = $valueTrans and skos:prefLabel[@xml:lang='fr']  = $value)]) = 1" />

                  <xsl:choose>
                    <xsl:when test="$sameValue = true()">
                      <xsl:apply-templates select="." />
                    </xsl:when>
                    <xsl:otherwise>
                      <gmd:keyword xsi:type="gmd:PT_FreeText_PropertyType">
                        <gco:CharacterString><xsl:value-of select="normalize-space(gco:CharacterString)" /></gco:CharacterString>
                        <gmd:PT_FreeText>
                          <gmd:textGroup>
                            <xsl:choose>
                              <xsl:when test="$langCode = '#fra'">
                                <xsl:variable name="localisedValue">
                                  <xsl:choose>
                                    <xsl:when test="normalize-space(gco:CharacterString)"><xsl:value-of select="$ecCoreThesaurus//skos:concept[skos:prefLabel[not(@xml:lang)] = $value]/skos:prefLabel[@xml:lang='fr']" /></xsl:when>
                                    <xsl:otherwise></xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="$localisedValue" /></gmd:LocalisedCharacterString>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:variable name="localisedValue">
                                  <xsl:choose>
                                    <xsl:when test="normalize-space(gco:CharacterString)"><xsl:value-of select="$ecCoreThesaurus//skos:concept[skos:prefLabel[@xml:lang='fr'] = $value]/skos:prefLabel[not(@xml:lang)]" /></xsl:when>
                                    <xsl:otherwise></xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="$localisedValue" /></gmd:LocalisedCharacterString>
                              </xsl:otherwise>
                            </xsl:choose>
                          </gmd:textGroup>
                        </gmd:PT_FreeText>
                      </gmd:keyword>
                    </xsl:otherwise>
                  </xsl:choose>

                </xsl:for-each>

                <xsl:apply-templates select="gmd:type" />
                <xsl:apply-templates select="gmd:thesaurusName" />

                <xsl:if test="not(gmd:thesaurusName)">
                  <gmd:thesaurusName>
                    <gmd:CI_Citation>
                      <gmd:title xsi:type="gmd:PT_FreeText_PropertyType">
                        <gco:CharacterString>
                          <xsl:choose>
                            <xsl:when test="$l1 = 'en'">Government of Canada Core Subject Thesaurus</xsl:when>
                            <xsl:otherwise>Thésaurus des sujets de base du gouvernement du Canada</xsl:otherwise>
                          </xsl:choose>
                        </gco:CharacterString>
                        <gmd:PT_FreeText>
                          <gmd:textGroup>
                            <gmd:LocalisedCharacterString locale="{$langCode}">
                              <xsl:choose>
                                <xsl:when test="$l1 = 'en'">Thésaurus des sujets de base du gouvernement du Canada</xsl:when>
                                <xsl:otherwise></xsl:otherwise>
                              </xsl:choose>Government of Canada Core Subject Thesaurus</gmd:LocalisedCharacterString>
                          </gmd:textGroup>
                        </gmd:PT_FreeText>
                      </gmd:title>
                      <gmd:date>
                        <gmd:CI_Date>
                          <gmd:date>
                            <gco:Date>2004</gco:Date>
                          </gmd:date>
                          <gmd:dateType>
                            <gmd:CI_DateTypeCode codeListValue="RI_366"
                                                 codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_87">creation; création</gmd:CI_DateTypeCode>
                          </gmd:dateType>
                        </gmd:CI_Date>
                      </gmd:date>
                      <gmd:date>
                        <gmd:CI_Date>
                          <gmd:date>
                            <gco:Date>2015-04-21</gco:Date>
                          </gmd:date>
                          <gmd:dateType>
                            <gmd:CI_DateTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_87" codeListValue="RI_367">publication; publication</gmd:CI_DateTypeCode>
                          </gmd:dateType>
                        </gmd:CI_Date>
                      </gmd:date>
                      <gmd:citedResponsibleParty>
                        <gmd:CI_ResponsibleParty>
                          <gmd:organisationName xsi:type="gmd:PT_FreeText_PropertyType">
                            <gco:CharacterString>
                              <xsl:choose>
                                <xsl:when test="$l1 = 'en'">Government of Canada; Library and Archives Canada</xsl:when>
                                <xsl:otherwise>Gouvernement du Canada; Bibliothèque et Archives Canada</xsl:otherwise>
                              </xsl:choose>
                            </gco:CharacterString>
                            <gmd:PT_FreeText>
                              <gmd:textGroup>
                                <gmd:LocalisedCharacterString locale="{$langCode}">
                                  <xsl:choose>
                                    <xsl:when test="$l1 = 'en'">Gouvernement du Canada; Bibliothèque et Archives Canada</xsl:when>
                                    <xsl:otherwise>Government of Canada; Library and Archives Canada</xsl:otherwise>
                                  </xsl:choose>
                                </gmd:LocalisedCharacterString>
                              </gmd:textGroup>
                            </gmd:PT_FreeText>
                          </gmd:organisationName>
                          <gmd:role>
                            <gmd:CI_RoleCode codeListValue="RI_409" codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_90">custodian; conservateur</gmd:CI_RoleCode>
                          </gmd:role>
                        </gmd:CI_ResponsibleParty>
                      </gmd:citedResponsibleParty>
                    </gmd:CI_Citation>
                  </gmd:thesaurusName>
                </xsl:if>
              </xsl:copy>
            </xsl:when>

            <xsl:otherwise>
              <xsl:copy>

                <xsl:if test="not(gmd:keyword)">
                  <gmd:keyword xsi:type="gmd:PT_FreeText_PropertyType">
                    <gco:CharacterString></gco:CharacterString>
                    <gmd:PT_FreeText>
                      <gmd:textGroup>
                        <gmd:LocalisedCharacterString locale="{$langCode}"></gmd:LocalisedCharacterString>
                      </gmd:textGroup>
                    </gmd:PT_FreeText>
                  </gmd:keyword>
                </xsl:if>

                <xsl:for-each select="gmd:keyword">
                  <xsl:variable name="value" select="normalize-space(gco:CharacterString)" />
                  <xsl:variable name="valueTrans" select="normalize-space(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString)" />

                  <xsl:variable name="sameValue" select="count($ecCoreThesaurus//skos:concept[(skos:prefLabel[not(@xml:lang)] = $value and skos:prefLabel[@xml:lang='fr']  = $valueTrans) or
                    (skos:prefLabel[not(@xml:lang)] = $valueTrans and skos:prefLabel[@xml:lang='fr']  = $value)]) = 1" />

                  <xsl:choose>
                    <xsl:when test="$sameValue = true()">
                      <xsl:apply-templates select="." />
                    </xsl:when>
                    <xsl:otherwise>
                      <gmd:keyword xsi:type="gmd:PT_FreeText_PropertyType">
                        <xsl:choose>
                          <!-- English metadata edited in french UI -->
                          <xsl:when test="$langCode = '#fra' and $lang = 'fre'">

                            <xsl:choose>
                              <xsl:when test="string($ecCoreThesaurus//skos:concept[skos:prefLabel[@xml:lang='fr'] = $value]/skos:prefLabel[not(@xml:lang)])">
                                <gco:CharacterString><xsl:value-of select="$ecCoreThesaurus//skos:concept[skos:prefLabel[@xml:lang='fr'] = $value]/skos:prefLabel[not(@xml:lang)]" /></gco:CharacterString>
                              </xsl:when>
                              <xsl:otherwise>
                                <gco:CharacterString><xsl:value-of select="normalize-space(gco:CharacterString)" /></gco:CharacterString>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>

                          <!-- French metadata edited in english UI -->
                          <xsl:when test="$langCode = '#eng' and $lang = 'eng'">
                            <xsl:choose>
                              <xsl:when test="string($ecCoreThesaurus//skos:concept[skos:prefLabel[not(@xml:lang)] = $value]/skos:prefLabel[@xml:lang='fr'])">
                                <gco:CharacterString><xsl:value-of select="$ecCoreThesaurus//skos:concept[skos:prefLabel[not(@xml:lang)] = $value]/skos:prefLabel[@xml:lang='fr']" /></gco:CharacterString>
                              </xsl:when>
                              <xsl:otherwise>
                                <gco:CharacterString><xsl:value-of select="normalize-space(gco:CharacterString)" /></gco:CharacterString>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>

                          <!-- Other cases -->
                          <xsl:otherwise>
                            <gco:CharacterString><xsl:value-of select="normalize-space(gco:CharacterString)" /></gco:CharacterString>
                          </xsl:otherwise>
                        </xsl:choose>

                        <gmd:PT_FreeText>
                          <gmd:textGroup>
                            <xsl:choose>
                              <xsl:when test="$langCode = '#fra' and $lang = 'eng'">
                                <xsl:choose>
                                  <xsl:when test="string($ecCoreThesaurus//skos:concept[skos:prefLabel[not(@xml:lang)] = $value]/skos:prefLabel[@xml:lang='fr'])">
                                    <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="$ecCoreThesaurus//skos:concept[skos:prefLabel[not(@xml:lang)] = $value]/skos:prefLabel[@xml:lang='fr']" /></gmd:LocalisedCharacterString>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="normalize-space(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString)" /></gmd:LocalisedCharacterString>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:when test="$langCode = '#eng' and $lang = 'fre'">
                                <xsl:choose>
                                  <xsl:when test="string($ecCoreThesaurus//skos:concept[skos:prefLabel[@xml:lang='fr'] = $value]/skos:prefLabel[not(@xml:lang)])">
                                    <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="$ecCoreThesaurus//skos:concept[skos:prefLabel[@xml:lang='fr'] = $value]/skos:prefLabel[not(@xml:lang)]" /></gmd:LocalisedCharacterString>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="normalize-space(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString)" /></gmd:LocalisedCharacterString>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>

                              <!-- English metadata edited in french UI -->
                              <xsl:when test="$langCode = '#fra' and $lang = 'fre'">
                                <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="$value" /></gmd:LocalisedCharacterString>
                              </xsl:when>

                              <!-- French metadata edited in english UI -->
                              <xsl:when test="$langCode = '#eng' and $lang = 'eng'">
                                <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="$value" /></gmd:LocalisedCharacterString>
                              </xsl:when>

                              <!-- Other cases -->
                              <xsl:otherwise>
                                <gmd:LocalisedCharacterString locale="{$langCode}"><xsl:value-of select="normalize-space(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString)" /></gmd:LocalisedCharacterString>
                              </xsl:otherwise>
                            </xsl:choose>

                          </gmd:textGroup>
                        </gmd:PT_FreeText>
                      </gmd:keyword>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>

                <xsl:apply-templates select="gmd:type" />
                <xsl:apply-templates select="gmd:thesaurusName" />

                <xsl:if test="not(gmd:thesaurusName)">
                <gmd:thesaurusName>
                  <gmd:CI_Citation>
                    <gmd:title xsi:type="gmd:PT_FreeText_PropertyType">
                      <gco:CharacterString>
                        <xsl:choose>
                          <xsl:when test="$l1 = 'en'">Government of Canada Core Subject Thesaurus</xsl:when>
                          <xsl:otherwise>Thésaurus des sujets de base du gouvernement du Canada</xsl:otherwise>
                        </xsl:choose>
                      </gco:CharacterString>
                      <gmd:PT_FreeText>
                        <gmd:textGroup>
                          <gmd:LocalisedCharacterString locale="{$langCode}">
                            <xsl:choose>
                              <xsl:when test="$l1 = 'en'">Thésaurus des sujets de base du gouvernement du Canada</xsl:when>
                              <xsl:otherwise></xsl:otherwise>
                            </xsl:choose>Government of Canada Core Subject Thesaurus</gmd:LocalisedCharacterString>
                        </gmd:textGroup>
                      </gmd:PT_FreeText>
                    </gmd:title>
                    <gmd:date>
                      <gmd:CI_Date>
                        <gmd:date>
                          <gco:Date>2004</gco:Date>
                        </gmd:date>
                        <gmd:dateType>
                          <gmd:CI_DateTypeCode codeListValue="RI_366"
                                               codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_87">creation; création</gmd:CI_DateTypeCode>
                        </gmd:dateType>
                      </gmd:CI_Date>
                    </gmd:date>
                    <gmd:date>
                      <gmd:CI_Date>
                        <gmd:date>
                          <gco:Date>2015-04-21</gco:Date>
                        </gmd:date>
                        <gmd:dateType>
                          <gmd:CI_DateTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_87" codeListValue="RI_367">publication; publication</gmd:CI_DateTypeCode>
                        </gmd:dateType>
                      </gmd:CI_Date>
                    </gmd:date>
                    <gmd:citedResponsibleParty>
                      <gmd:CI_ResponsibleParty>
                        <gmd:organisationName xsi:type="gmd:PT_FreeText_PropertyType">
                          <gco:CharacterString>
                            <xsl:choose>
                              <xsl:when test="$l1 = 'en'">Government of Canada; Library and Archives Canada</xsl:when>
                              <xsl:otherwise>Gouvernement du Canada; Bibliothèque et Archives Canada</xsl:otherwise>
                            </xsl:choose>
                          </gco:CharacterString>
                          <gmd:PT_FreeText>
                            <gmd:textGroup>
                              <gmd:LocalisedCharacterString locale="{$langCode}">
                                <xsl:choose>
                                  <xsl:when test="$l1 = 'en'">Gouvernement du Canada; Bibliothèque et Archives Canada</xsl:when>
                                  <xsl:otherwise>Government of Canada; Library and Archives Canada</xsl:otherwise>
                                </xsl:choose>
                              </gmd:LocalisedCharacterString>
                            </gmd:textGroup>
                          </gmd:PT_FreeText>
                        </gmd:organisationName>
                        <gmd:role>
                          <gmd:CI_RoleCode codeListValue="RI_409" codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_90">custodian; conservateur</gmd:CI_RoleCode>
                        </gmd:role>
                      </gmd:CI_ResponsibleParty>
                    </gmd:citedResponsibleParty>
                  </gmd:CI_Citation>
                </gmd:thesaurusName>
                </xsl:if>
              </xsl:copy>

            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

  <xsl:template match="gmd:MD_ScopeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_ScopeCode']/entry[code = $currentCodeValue]/value" />
      <gmd:MD_ScopeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_108"
                        codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:MD_ScopeCode>
  </xsl:template>

  <xsl:template match="gmd:status">
    <xsl:variable name="currentCodeValue" select="gmd:MD_ProgressCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_ProgressCode']/entry[code = $currentCodeValue]/value" />


    <gmd:status>
      <gmd:MD_ProgressCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_106"
                           codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:MD_ProgressCode>
    </gmd:status>
  </xsl:template>

  <xsl:template match="gmd:spatialRepresentationType">
    <xsl:variable name="currentCodeValue" select="gmd:MD_SpatialRepresentationTypeCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_SpatialRepresentationTypeCode']/entry[code = $currentCodeValue]/value" />

   <!--<xsl:message>gmd:spatialRepresentationType <xsl:value-of select="$schemaTranslationsDir" /> - <xsl:value-of select="$thesauriDir" /></xsl:message>
    <xsl:message>gmd:spatialRepresentationType (currentCodeValue): <xsl:value-of select="$currentCodeValue" /></xsl:message>
    <xsl:message>gmd:spatialRepresentationType (value): <xsl:value-of select="$value" /></xsl:message>-->

    <gmd:spatialRepresentationType>
      <gmd:MD_SpatialRepresentationTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_109"
                        codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:MD_SpatialRepresentationTypeCode>
    </gmd:spatialRepresentationType>
  </xsl:template>

  <xsl:template match="gmd:maintenanceAndUpdateFrequency">
    <xsl:variable name="currentCodeValue" select="gmd:MD_MaintenanceFrequencyCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_MaintenanceFrequencyCode']/entry[code = $currentCodeValue]/value" />

    <gmd:maintenanceAndUpdateFrequency>
      <gmd:MD_MaintenanceFrequencyCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_102"
                                            codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:MD_MaintenanceFrequencyCode>
    </gmd:maintenanceAndUpdateFrequency>
  </xsl:template>

  <xsl:template match="gmd:role">
    <xsl:variable name="currentCodeValue" select="gmd:CI_RoleCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:CI_RoleCode']/entry[code = $currentCodeValue]/value" />

    <gmd:role>
      <gmd:CI_RoleCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_90"
                                       codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:CI_RoleCode>
    </gmd:role>
  </xsl:template>

  <xsl:template match="gmd:dateType">
    <xsl:variable name="currentCodeValue" select="gmd:CI_DateTypeCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:CI_DateTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:dateType>
      <gmd:CI_DateTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_87"
                                            codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:CI_DateTypeCode>
    </gmd:dateType>
  </xsl:template>

  <xsl:template match="gmd:MD_RestrictionCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_RestrictionCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_RestrictionCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_107"
                           codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:MD_RestrictionCode>
  </xsl:template>

  <xsl:template match="gmd:presentationForm">
    <xsl:variable name="currentCodeValue" select="gmd:CI_PresentationFormCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:CI_PresentationFormCode']/entry[code = $currentCodeValue]/value" />

    <gmd:presentationForm>
      <gmd:CI_PresentationFormCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_89"
                              codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:CI_PresentationFormCode>
    </gmd:presentationForm>
  </xsl:template>

  <xsl:template match="gmd:MD_GeometricObjectTypeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_GeometricObjectTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_GeometricObjectTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_99"
                            codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_GeometricObjectTypeCode>
  </xsl:template>

  <xsl:template match="gmd:MD_CellGeometryCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_CellGeometryCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_CellGeometryCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_94"
                                    codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_CellGeometryCode>
  </xsl:template>

  <xsl:template match="gmd:MD_PixelOrientationCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_PixelOrientationCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_PixelOrientationCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_105"
                             codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_PixelOrientationCode>
  </xsl:template>

  <xsl:template match="gmd:DQ_EvaluationMethodTypeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:DQ_EvaluationMethodTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:DQ_EvaluationMethodTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_91"
                                 codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:DQ_EvaluationMethodTypeCode>
  </xsl:template>

  <xsl:template match="gmd:DS_AssociationTypeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:DS_AssociationTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:DS_AssociationTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_92"
                                     codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:DS_AssociationTypeCode>
  </xsl:template>

  <xsl:template match="gmd:DS_InitiativeTypeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:DS_InitiativeTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:DS_InitiativeTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_93"
                                codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:DS_InitiativeTypeCode>
  </xsl:template>

  <xsl:template match="gmd:MD_ClassificationCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_ClassificationCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_ClassificationCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_96"
                               codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_ClassificationCode>
  </xsl:template>

  <xsl:template match="gmd:MD_CoverageContentTypeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_CoverageContentTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_CoverageContentTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_97"
                               codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_CoverageContentTypeCode>
  </xsl:template>

  <xsl:template match="gmd:MD_DimensionNameTypeCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_DimensionNameTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_DimensionNameTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_98"
                                    codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_DimensionNameTypeCode>
  </xsl:template>

  <xsl:template match="gmd:MD_ImagingConditionCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_ImagingConditionCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_ImagingConditionCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_100"
                                  codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_ImagingConditionCode>
  </xsl:template>

  <xsl:template match="gmd:MD_MediumFormatCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_MediumFormatCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_MediumFormatCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_103"
                                 codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_MediumFormatCode>
  </xsl:template>

  <xsl:template match="gmd:MD_TopologyLevelCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_TopologyLevelCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_TopologyLevelCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_111"
                             codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_TopologyLevelCode>
  </xsl:template>

  <xsl:template match="gmd:MD_MediumNameCode">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_MediumNameCode']/entry[code = $currentCodeValue]/value" />

    <gmd:MD_MediumNameCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_104"
                              codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </gmd:MD_MediumNameCode>
  </xsl:template>


  <!-- CharacterSet (in IdentificationInfo). The same element at metadata level is fixed to utf-8. -->
  <xsl:template match="gmd:MD_DataIdentification/gmd:characterSet" priority="20">
    <xsl:variable name="currentCodeValue" select="gmd:MD_CharacterSetCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_CharacterSetCode']/entry[code = $currentCodeValue]/value" />

   <gmd:characterSet>
     <gmd:MD_CharacterSetCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_95"
                               codeListValue="{$currentCodeValue}">
       <xsl:value-of select="$value" />
     </gmd:MD_CharacterSetCode>
   </gmd:characterSet>
 </xsl:template>

  <!-- KeywordTypeCode -->
  <xsl:template match="gmd:type[gmd:MD_KeywordTypeCode]" priority="20">
    <xsl:variable name="currentCodeValue" select="gmd:MD_KeywordTypeCode/@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_KeywordTypeCode']/entry[code = $currentCodeValue]/value" />

    <gmd:type>
      <gmd:MD_KeywordTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_101"
                              codeListValue="{$currentCodeValue}">
        <xsl:value-of select="$value" />
      </gmd:MD_KeywordTypeCode>
    </gmd:type>
  </xsl:template>

  <!-- srv:SV_CouplingType -->
  <xsl:template match="srv:SV_CouplingType">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='srv:SV_CouplingType']/entry[code = $currentCodeValue]/value" />

    <srv:SV_CouplingType codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_114"
                           codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </srv:SV_CouplingType>
  </xsl:template>

  <!-- srv:DCPList -->
  <xsl:template match="srv:DCPList">
    <xsl:variable name="currentCodeValue" select="@codeListValue" />
    <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='srv:DCPList']/entry[code = $currentCodeValue]/value" />

    <srv:DCPList codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_112"
                         codeListValue="{$currentCodeValue}">
      <xsl:value-of select="$value" />
    </srv:DCPList>
  </xsl:template>


  <!--<xsl:template match="gmd:topicCategory">
    <xsl:variable name="currentValue" select="gmd:MD_TopicCategoryCode" />
    <xsl:variable name="codeValue" select="$codelistFile/codelists/codelist[@name='gmd:MD_TopicCategoryCode']/entry[value= $currentValue]/code" />
    <xsl:message>gmd:topicCategory</xsl:message>
    <xsl:message>gmd:topicCategory (currentValue): <xsl:value-of select="$currentValue" /></xsl:message>
    <xsl:message>gmd:topicCategory (codeValue): <xsl:value-of select="$codeValue" /></xsl:message>
    <xsl:message>gmd:topicCategory (values): <xsl:value-of select="$codelistFile/codelists/codelist[@name='gmd:MD_TopicCategoryCode']" /></xsl:message>
    <gmd:topicCategory>
      <gmd:MD_TopicCategoryCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_110"
                                          codeListValue="{$codeValue}">
      <xsl:value-of select="gmd:MD_TopicCategoryCode" />
    </gmd:MD_TopicCategoryCode>
  </gmd:topicCategory>
  </xsl:template>-->

  <xsl:template match="gmd:country-DISABLED[name(..) = 'gmd:CI_Address']">
    <xsl:copy>
      <xsl:attribute name="xsi:type">gmd:PT_FreeText_PropertyType</xsl:attribute>

      <xsl:variable name="actualValue" select="gco:CharacterString" />

      <!-- values send by editor are in english -->
      <gco:CharacterString>
        <xsl:choose>
          <xsl:when test="$actualValue = 'Canada'">Canada</xsl:when>
          <xsl:when test="starts-with($actualValue, 'United States') and $localeForTranslations = '#fra'">United States of America</xsl:when>
          <xsl:when test="starts-with($actualValue, 'United States') and $localeForTranslations = '#eng'">États-Unis d'Amérique</xsl:when>
          <xsl:otherwise><xsl:value-of select="gco:CharacterString" /></xsl:otherwise>
        </xsl:choose>
      </gco:CharacterString>
      <gmd:PT_FreeText>
        <gmd:textGroup>
          <gmd:LocalisedCharacterString locale="{$localeForTranslations}">
            <xsl:choose>
              <xsl:when test="$actualValue = 'Canada'">Canada</xsl:when>
              <xsl:when test="starts-with($actualValue, 'United States') and $localeForTranslations = '#fra'">États-Unis d'Amérique</xsl:when>
              <xsl:when test="starts-with($actualValue, 'United States') and $localeForTranslations = '#eng'">United States of America</xsl:when>

              <xsl:otherwise><xsl:value-of select="gco:CharacterString" /></xsl:otherwise>
            </xsl:choose>
          </gmd:LocalisedCharacterString>
        </gmd:textGroup>
      </gmd:PT_FreeText>
    </xsl:copy>
  </xsl:template>


 <xsl:template match="gmd:MD_DataIdentification">
    <xsl:copy>
      <xsl:apply-templates select="@*"/>

      <xsl:apply-templates select="gmd:citation"/>
      <xsl:apply-templates select="gmd:abstract"/>
      <xsl:apply-templates select="gmd:purpose"/>
      <xsl:apply-templates select="gmd:credit"/>

      <xsl:apply-templates select="gmd:status"/>
      <xsl:apply-templates select="gmd:pointOfContact"/>
      <xsl:apply-templates select="gmd:resourceMaintenance"/>
      <xsl:apply-templates select="gmd:graphicOverview"/>
      <xsl:apply-templates select="gmd:resourceFormat"/>


      <xsl:variable name="coreThesaurusEng" select="'Government of Canada Core Subject Thesaurus'" />
      <xsl:variable name="coreThesaurusFre" select="'Thésaurus des sujets de base du gouvernement du Canada'" />

      <xsl:variable name="keywordGroups">
        <keywords xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gco="http://www.isotc211.org/2005/gco">

          <!-- Keywords without or empty thesaurus -->
          <!-- Group by type -->
          <xsl:for-each-group select="gmd:descriptiveKeywords[not(gmd:MD_Keywords/gmd:thesaurusName) or not(string(gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString))]" group-by="gmd:MD_Keywords/gmd:type/gmd:MD_KeywordTypeCode/@codeListValue">

            <!-- Group by thesaurus -->
              <keyword-group type="{gmd:MD_Keywords/gmd:type/gmd:MD_KeywordTypeCode/@codeListValue}" value="{gmd:MD_Keywords/gmd:type/gmd:MD_KeywordTypeCode}">
                <xsl:for-each select="current-group()/gmd:MD_Keywords/gmd:keyword">
                  <xsl:variable name="locale">
                    <xsl:choose>
                      <xsl:when test="string(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString/@locale)"><xsl:value-of select="gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString/@locale" /></xsl:when>
                      <xsl:otherwise><xsl:value-of select="$localeForTranslations"/></xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <keyword value="{gco:CharacterString}" translation="{gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString}" locale="{$locale}">
                    <xsl:copy-of select="../gmd:thesaurusName" />
                  </keyword>
                </xsl:for-each>
              </keyword-group>

          </xsl:for-each-group>



          <!-- Keywords with thesaurus -->
          <!-- Group by type -->
        <xsl:for-each-group select="gmd:descriptiveKeywords[string(gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString) and (gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString != $coreThesaurusEng) and
                                      (gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString != $coreThesaurusFre)]" group-by="gmd:MD_Keywords/gmd:type/gmd:MD_KeywordTypeCode">

          <!-- Group by thesaurus -->
          <xsl:for-each-group select="current-group()" group-by="gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString">
            <keyword-group type="{gmd:MD_Keywords/gmd:type/gmd:MD_KeywordTypeCode/@codeListValue}" value="{gmd:MD_Keywords/gmd:type/gmd:MD_KeywordTypeCode}">
              <xsl:for-each select="current-group()/gmd:MD_Keywords/gmd:keyword">
                <xsl:variable name="locale">
                  <xsl:choose>
                    <xsl:when test="string(gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString/@locale)"><xsl:value-of select="gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString/@locale" /></xsl:when>
                    <xsl:otherwise><xsl:value-of select="$localeForTranslations"/></xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <keyword value="{gco:CharacterString}" translation="{gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString}" locale="{$locale}">
                  <xsl:copy-of select="../gmd:thesaurusName" />
                </keyword>
              </xsl:for-each>
            </keyword-group>

          </xsl:for-each-group>
        </xsl:for-each-group>

        </keywords>
      </xsl:variable>

      <xsl:variable name="list-keywords" select="exslt:node-set($keywordGroups)" />

      <!--<xsl:for-each select="$list-keywords/keywords/keyword-group">
        <xsl:message>KEYWORD GROUP: <xsl:value-of select="@type" /></xsl:message>
        <xsl:for-each select="keyword">
          <xsl:message>KEYWORD11: <xsl:value-of select="@value" /></xsl:message>
        </xsl:for-each>
      </xsl:for-each>-->

      <xsl:for-each select="$list-keywords/keywords/keyword-group">

        <xsl:variable name="currentCodeValue" select="@type" />
        <gmd:descriptiveKeywords>
          <gmd:MD_Keywords>

            <xsl:for-each select="keyword">

              <gmd:keyword xsi:type="gmd:PT_FreeText_PropertyType">
                <gco:CharacterString><xsl:value-of select="@value" /></gco:CharacterString>
                <gmd:PT_FreeText>
                  <gmd:textGroup>
                    <gmd:LocalisedCharacterString locale="{@locale}"><xsl:value-of select="@translation" /></gmd:LocalisedCharacterString>
                  </gmd:textGroup>
                </gmd:PT_FreeText>
              </gmd:keyword>

            </xsl:for-each>


            <gmd:type>
              <xsl:variable name="value" select="$codelistFile/codelists/codelist[@name='gmd:MD_KeywordTypeCode']/entry[code = $currentCodeValue]/value" />

              <gmd:MD_KeywordTypeCode codeList="https://schemas.metadata.geo.ca/register/napMetadataRegister.xml#IC_101" codeListValue="{@type}"><xsl:value-of select="$value" /></gmd:MD_KeywordTypeCode>
            </gmd:type>

            <xsl:apply-templates select="keyword[1]/gmd:thesaurusName" />
          </gmd:MD_Keywords>
        </gmd:descriptiveKeywords>
      </xsl:for-each>

      <xsl:apply-templates select="gmd:descriptiveKeywords[(gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString = $coreThesaurusEng) or
                                      (gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString = $coreThesaurusFre)]"/>

      <!--<xsl:apply-templates select="gmd:descriptiveKeywords" />-->
      <xsl:apply-templates select="gmd:resourceSpecificUsage"/>
      <xsl:apply-templates select="gmd:resourceConstraints"/>
      <xsl:apply-templates select="gmd:aggregationInfo"/>
      <xsl:apply-templates select="gmd:spatialRepresentationType"/>
      <xsl:apply-templates select="gmd:spatialResolution"/>
      <xsl:apply-templates select="gmd:language"/>
      <xsl:apply-templates select="gmd:characterSet"/>
      <xsl:apply-templates select="gmd:topicCategory"/>
      <xsl:apply-templates select="gmd:environmentDescription"/>
      <xsl:apply-templates select="gmd:extent"/>
      <xsl:apply-templates select="gmd:supplementalInformation"/>
    </xsl:copy>
  </xsl:template>


  <!-- Apply same changes as above to the gmd:LocalisedCharacterString -->
  <xsl:template  match="gmd:LocalisedCharacterString">
    <xsl:element name="gmd:{local-name()}">
      <xsl:apply-templates select="@*"/>
        <xsl:attribute name="locale">
          <xsl:value-of select="$localeForTranslations"/>
        </xsl:attribute>
      <xsl:apply-templates select="node()"/>
    </xsl:element>
  </xsl:template>

  <xsl:template  match="gco:Distance">
    <xsl:element name="gco:{local-name()}">
      <xsl:apply-templates select="@*"/>
      <xsl:attribute name="uom">http://standards.iso.org/ittf/PubliclyAvailableStandards/ISO_19139_Schemas/resources/uom/gmxUom.xml#<xsl:value-of select="if (contains(@uom, '#')) then tokenize(@uom,'#')[last()] else @uom"/></xsl:attribute>
      <xsl:apply-templates select="node()"/>
    </xsl:element>
  </xsl:template>



  <xsl:template match="gmd:onLine[@xlink:title]" priority="100">
    <xsl:copy>
      <xsl:apply-templates select="@*[name()!='xlink:title']" />

      <xsl:apply-templates select="node()"/>
    </xsl:copy>
  </xsl:template>

  <xsl:template match="gco:Date">
    <xsl:copy>
      <xsl:choose>
        <xsl:when test="@xsi:nil and string(.)"><xsl:copy-of select="@*[not(name()='xsi:nil')]" /> </xsl:when>
        <xsl:otherwise><xsl:copy-of select="@*" /></xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates select="node()"/>
    </xsl:copy>
  </xsl:template>


  <xsl:template match="gml:TimePeriod[gml:beginPosition]" priority="100">
    <xsl:copy>
      <xsl:choose>
        <xsl:when test="not(string(@gml:id))">
          <xsl:copy-of select="@*[not(name()='gml:id')]"/>
          <xsl:attribute name="gml:id" select="generate-id()" />

        </xsl:when>
        <xsl:otherwise>
          <xsl:copy-of select="@*"/>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="gml:beginPosition" />
      <xsl:apply-templates select="gml:endPosition" />

      <xsl:if test="not(gml:endPosition)">
        <gml:endPosition />
      </xsl:if>
    </xsl:copy>
  </xsl:template>

  <!-- ================================================================= -->
	<!-- copy everything else as is -->

	<xsl:template match="@*|node()">
	    <xsl:copy>
	        <xsl:apply-templates select="@*|node()"/>
      </xsl:copy>
	</xsl:template>

</xsl:stylesheet>
