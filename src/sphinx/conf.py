# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- setup --------------------------------------------------------------------

import datetime
import os
import xml.etree.ElementTree as ET

now = datetime.datetime.now()

#Current year
year = now.year

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'User Manual (HNAP)'
copyright = u'{}, GeoCat BV and others'.format(year)
author = 'GeoCat BV'

# The full version, including alpha/beta/rc tags
pompath = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(__file__))), "pom.xml")
pomtree = ET.parse(pompath)
release = pomtree.getroot().find("{http://maven.apache.org/POM/4.0.0}version").text
snapshot = release.find('SNAPSHOT') != -1

# The short X.Y version
version = ".".join(release.split(".")[:2])

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
  'sphinx.ext.ifconfig',
  'sphinx.ext.extlinks',
  'sphinx.ext.autosectionlabel'
]

# Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = {
    '.rst': 'restructuredtext'
}

# The master toctree document.
master_doc = 'index'

# -- internationalization ------------------------------------------------

locale_dirs = ['../locale/']
# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# filename format for language-specific figures
# Example img/image.pngimage.fr.png
figure_language_filename = '{path}/{basename}_{language}{ext}'

# Document text domain
gettext_compact = False

# generates uuid information for version tracking in message catalogs
# Add uid line for each msgids in .pot files.
# Calculate similarity between new msgids and previously saved old msgids.
# Recommend python-levenshtein to speed up generation
gettext_uuid = True

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# -- Extension External Links ------------------------------------------------
extlinks = {
    'wiki': ('http://github.com/geonetwork/core-geonetwork/wiki/%s',''),
    'website': ('http://geonetwork-opensource.org/%s',''),
    'manual': ('https://geonetwork-opensource.org/manuals/3.10.x/en/%s',''),
    'issue': ('https://github.com/geonetwork/core-geonetwork/issues/','#'),
    'api': ('http://docs.geoserver.org/latest/en/api/#1.0.0/%s',''),
    'tomcat': ('https://tomcat.apache.org/tomcat-9.0-doc/%s','')
}

# Common substitutions
#
# rst_epilog =

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = ['../../themes']

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': None,
    'style_external_links': True,
    'includehidden': False,
    'titles_only': False,
    'collapse_navigation': True,
    'style_nav_header_background': 'gray',
    'sticky_navigation': True
}

# html_context = {'theme_is_prerelease': snapshot}

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
# html_logo = 'logo.png'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
# html_favicon = 'favicon.ico'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']
#
# html_css_files = [
#    'css/custom.css',
#]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}
html_copy_source = False
html_show_sourcelink = False

